// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RH_CV.Data;

#nullable disable

namespace RH_CV.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RH_CV.Models.ContactoEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.ToTable("ContactoEmergencia");
                });

            modelBuilder.Entity("RH_CV.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaFuncional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EPSId")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("DATE");

                    b.Property<int?>("FondoPensionesId")
                        .HasColumnType("int");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroMedico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salario")
                        .HasColumnType("int");

                    b.Property<string>("TiempoContratado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiempoVinculacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoContratoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EPSId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("FondoPensionesId");

                    b.HasIndex("TipoCargoId");

                    b.HasIndex("TipoContratoId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("RH_CV.Models.DatosFamiliares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.ToTable("DatosFamiliares");
                });

            modelBuilder.Entity("RH_CV.Models.DatosGenerales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComoSupo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Ingreso")
                        .HasColumnType("int");

                    b.Property<string>("OtrosIngresos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParientesTrabajando")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoVivienda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DatosGenerales");
                });

            modelBuilder.Entity("RH_CV.Models.DatosPersonales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DatosGeneralesId")
                        .HasColumnType("int");

                    b.Property<int>("DireccionId")
                        .HasColumnType("int");

                    b.Property<int>("EPSId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estrato")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("DATE");

                    b.Property<int?>("FondoCesantiasId")
                        .HasColumnType("int");

                    b.Property<int?>("FondoPensionesId")
                        .HasColumnType("int");

                    b.Property<string>("GrupoEtnico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LibretaMilitar")
                        .HasColumnType("int");

                    b.Property<string>("MunicipioNacimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MunicipioResidencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisNacimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonasACargoId")
                        .HasColumnType("int");

                    b.Property<int?>("PracticasId")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ViveCon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatosGeneralesId");

                    b.HasIndex("DireccionId");

                    b.HasIndex("EPSId");

                    b.HasIndex("FondoCesantiasId");

                    b.HasIndex("FondoPensionesId");

                    b.HasIndex("PersonasACargoId");

                    b.HasIndex("PracticasId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCompleta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Num1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Num2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Num3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("RH_CV.Models.DocenciaServicio", b =>
                {
                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<string>("AreaFuncional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("DATE");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVinculacionId")
                        .HasColumnType("int");

                    b.HasKey("Documento");

                    b.HasIndex("TipoCargoId");

                    b.HasIndex("TipoVinculacionId");

                    b.ToTable("DocenciaServicio");
                });

            modelBuilder.Entity("RH_CV.Models.EPS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EPS");
                });

            modelBuilder.Entity("RH_CV.Models.Empleado", b =>
                {
                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("DATE");

                    b.Property<string>("LugarExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Documento");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("RH_CV.Models.Escolaridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("int");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.ToTable("Escolaridad");
                });

            modelBuilder.Entity("RH_CV.Models.Estudiante", b =>
                {
                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<string>("AreaFuncional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("DATE");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVinculacionId")
                        .HasColumnType("int");

                    b.HasKey("Documento");

                    b.HasIndex("TipoCargoId");

                    b.HasIndex("TipoVinculacionId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("RH_CV.Models.FondoCesantias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FondoCesantias");
                });

            modelBuilder.Entity("RH_CV.Models.FondoPensiones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FondoPensiones");
                });

            modelBuilder.Entity("RH_CV.Models.InfoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MunicipioExpedicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaisExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("InfoDocumento");
                });

            modelBuilder.Entity("RH_CV.Models.InfoLaboral", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Celular")
                        .HasColumnType("int");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("datetime2");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.ToTable("InfoLaboral");
                });

            modelBuilder.Entity("RH_CV.Models.Interdependencia", b =>
                {
                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<string>("AreaFuncional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("DATE");

                    b.Property<string>("Institucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVinculacionId")
                        .HasColumnType("int");

                    b.HasKey("Documento");

                    b.HasIndex("TipoCargoId");

                    b.HasIndex("TipoVinculacionId");

                    b.ToTable("Interdependencia");
                });

            modelBuilder.Entity("RH_CV.Models.PersonasACargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Conyugue")
                        .HasColumnType("int");

                    b.Property<int>("Hijo")
                        .HasColumnType("int");

                    b.Property<int>("Otros")
                        .HasColumnType("int");

                    b.Property<int>("Padres")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonasACargo");
                });

            modelBuilder.Entity("RH_CV.Models.Practicas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DocenciaServicios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("DATE");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Practicas");
                });

            modelBuilder.Entity("RH_CV.Models.ReferenciasFamiliares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.ToTable("ReferenciasFamiliares");
                });

            modelBuilder.Entity("RH_CV.Models.ReferenciasPersonales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DatosPersonalesId");

                    b.ToTable("ReferenciasPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("RH_CV.Models.TipoCargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCargo");
                });

            modelBuilder.Entity("RH_CV.Models.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoContrato");
                });

            modelBuilder.Entity("RH_CV.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("RH_CV.Models.TipoVinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoVinculacion");
                });

            modelBuilder.Entity("RH_CV.Models.TipoVinculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoVinculo");
                });

            modelBuilder.Entity("RH_CV.Models.Usuario", b =>
                {
                    b.Property<string>("User")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int>("InfoDocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVinculoId")
                        .HasColumnType("int");

                    b.HasKey("User");

                    b.HasIndex("InfoDocumentoId");

                    b.HasIndex("RolId");

                    b.HasIndex("TipoContratoId");

                    b.HasIndex("TipoVinculoId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("RH_CV.Models.Voluntario", b =>
                {
                    b.Property<int>("Documento")
                        .HasColumnType("int");

                    b.Property<string>("AreaFuncional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("DATE");

                    b.Property<DateTime?>("FechaRetiro")
                        .HasColumnType("DATE");

                    b.Property<string>("MotivoRetiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCargoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoVinculacionId")
                        .HasColumnType("int");

                    b.HasKey("Documento");

                    b.HasIndex("TipoCargoId");

                    b.HasIndex("TipoVinculacionId");

                    b.ToTable("Voluntario");
                });

            modelBuilder.Entity("RH_CV.Models.ContactoEmergencia", b =>
                {
                    b.HasOne("RH_CV.Models.DatosPersonales", "DatosPersonales")
                        .WithMany("ContactoEmergencia")
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Contrato", b =>
                {
                    b.HasOne("RH_CV.Models.EPS", "EPS")
                        .WithMany()
                        .HasForeignKey("EPSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.Empleado", "Empleado")
                        .WithMany("Contrato")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.FondoPensiones", "FondoPensiones")
                        .WithMany()
                        .HasForeignKey("FondoPensionesId");

                    b.HasOne("RH_CV.Models.TipoCargo", "TipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoId");

                    b.Navigation("EPS");

                    b.Navigation("Empleado");

                    b.Navigation("FondoPensiones");

                    b.Navigation("TipoCargo");

                    b.Navigation("TipoContrato");
                });

            modelBuilder.Entity("RH_CV.Models.DatosFamiliares", b =>
                {
                    b.HasOne("RH_CV.Models.DatosPersonales", "DatosPersonales")
                        .WithMany("DatosFamiliares")
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.DatosPersonales", b =>
                {
                    b.HasOne("RH_CV.Models.DatosGenerales", "DatosGenerales")
                        .WithMany()
                        .HasForeignKey("DatosGeneralesId");

                    b.HasOne("RH_CV.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("DireccionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.EPS", "EPS")
                        .WithMany()
                        .HasForeignKey("EPSId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.FondoCesantias", "FondoCesantias")
                        .WithMany()
                        .HasForeignKey("FondoCesantiasId");

                    b.HasOne("RH_CV.Models.FondoPensiones", "FondoPensiones")
                        .WithMany()
                        .HasForeignKey("FondoPensionesId");

                    b.HasOne("RH_CV.Models.PersonasACargo", "PersonasACargo")
                        .WithMany()
                        .HasForeignKey("PersonasACargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.Practicas", "Practicas")
                        .WithMany()
                        .HasForeignKey("PracticasId");

                    b.HasOne("RH_CV.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosGenerales");

                    b.Navigation("Direccion");

                    b.Navigation("EPS");

                    b.Navigation("FondoCesantias");

                    b.Navigation("FondoPensiones");

                    b.Navigation("PersonasACargo");

                    b.Navigation("Practicas");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("RH_CV.Models.DocenciaServicio", b =>
                {
                    b.HasOne("RH_CV.Models.TipoCargo", "TipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.TipoVinculacion", "TipoVinculacion")
                        .WithMany()
                        .HasForeignKey("TipoVinculacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCargo");

                    b.Navigation("TipoVinculacion");
                });

            modelBuilder.Entity("RH_CV.Models.Escolaridad", b =>
                {
                    b.HasOne("RH_CV.Models.DatosPersonales", "DatosPersonales")
                        .WithMany("Escolaridad")
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Estudiante", b =>
                {
                    b.HasOne("RH_CV.Models.TipoCargo", "TipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.TipoVinculacion", "TipoVinculacion")
                        .WithMany()
                        .HasForeignKey("TipoVinculacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCargo");

                    b.Navigation("TipoVinculacion");
                });

            modelBuilder.Entity("RH_CV.Models.InfoDocumento", b =>
                {
                    b.HasOne("RH_CV.Models.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("RH_CV.Models.InfoLaboral", b =>
                {
                    b.HasOne("RH_CV.Models.DatosPersonales", "DatosPersonales")
                        .WithMany("InfoLaboral")
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Interdependencia", b =>
                {
                    b.HasOne("RH_CV.Models.TipoCargo", "TipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.TipoVinculacion", "TipoVinculacion")
                        .WithMany()
                        .HasForeignKey("TipoVinculacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCargo");

                    b.Navigation("TipoVinculacion");
                });

            modelBuilder.Entity("RH_CV.Models.ReferenciasFamiliares", b =>
                {
                    b.HasOne("RH_CV.Models.DatosPersonales", "DatosPersonales")
                        .WithMany("ReferenciasFamiliares")
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.ReferenciasPersonales", b =>
                {
                    b.HasOne("RH_CV.Models.DatosPersonales", "DatosPersonales")
                        .WithMany("ReferenciasPersonales")
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DatosPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Usuario", b =>
                {
                    b.HasOne("RH_CV.Models.InfoDocumento", "InfoDocumento")
                        .WithMany()
                        .HasForeignKey("InfoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.TipoContrato", "TipoContrato")
                        .WithMany()
                        .HasForeignKey("TipoContratoId");

                    b.HasOne("RH_CV.Models.TipoVinculo", "TipoVinculo")
                        .WithMany()
                        .HasForeignKey("TipoVinculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InfoDocumento");

                    b.Navigation("Rol");

                    b.Navigation("TipoContrato");

                    b.Navigation("TipoVinculo");
                });

            modelBuilder.Entity("RH_CV.Models.Voluntario", b =>
                {
                    b.HasOne("RH_CV.Models.TipoCargo", "TipoCargo")
                        .WithMany()
                        .HasForeignKey("TipoCargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RH_CV.Models.TipoVinculacion", "TipoVinculacion")
                        .WithMany()
                        .HasForeignKey("TipoVinculacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCargo");

                    b.Navigation("TipoVinculacion");
                });

            modelBuilder.Entity("RH_CV.Models.DatosPersonales", b =>
                {
                    b.Navigation("ContactoEmergencia");

                    b.Navigation("DatosFamiliares");

                    b.Navigation("Escolaridad");

                    b.Navigation("InfoLaboral");

                    b.Navigation("ReferenciasFamiliares");

                    b.Navigation("ReferenciasPersonales");
                });

            modelBuilder.Entity("RH_CV.Models.Empleado", b =>
                {
                    b.Navigation("Contrato");
                });
#pragma warning restore 612, 618
        }
    }
}
